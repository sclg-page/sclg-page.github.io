Here's the minimally edited program that shrinks the staircase radius by 80%:

```python
from helper import *

"""
Shrink staircase radius by 80%
"""

@register()
def stair_step(width: float, height: float, depth: float) -> Shape:
    return primitive_call('cube', color=(0.8, 0.8, 0.8), shape_kwargs={'scale': (width, height, depth)})

@register()
def spiral_staircase(radius: float, height: float, num_steps: int) -> Shape:
    def loop_fn(i: int) -> Shape:
        angle = (i / num_steps) * 2 * math.pi
        step_width = 0.8 * radius
        step_height = height / num_steps
        step_depth = 0.3 * radius

        step = library_call('stair_step', width=step_width, height=step_height, depth=step_depth)

        y_offset = i * step_height
        x_offset = radius * math.cos(angle)
        z_offset = radius * math.sin(angle)

        step = transform_shape(step, translation_matrix((x_offset, y_offset, z_offset)))
        return transform_shape(step, rotation_matrix(angle, (0, 1, 0), (x_offset, y_offset, z_offset)))

    return loop(num_steps, loop_fn)

@register()
def central_column(radius: float, height: float) -> Shape:
    return primitive_call('cylinder', color=(0.7, 0.7, 0.7),
                          shape_kwargs={'radius': radius, 'p0': (0, 0, 0), 'p1': (0, height, 0)})

@register()
def bramante_staircase() -> Shape:
    staircase_radius = 5.0 * 0.2  # Shrink staircase radius by 80%
    staircase_height = 15.0
    num_steps = 60
    column_radius = 0.5 * 0.2  # Shrink column radius proportionally

    stairs = library_call('spiral_staircase', radius=staircase_radius, height=staircase_height, num_steps=num_steps)
    column = library_call('central_column', radius=column_radius, height=staircase_height)

    return concat_shapes(stairs, column)
```

In this edited version, I've made the following changes to shrink the staircase radius by 80%:

1. In the `bramante_staircase` function, I've modified the `staircase_radius` by multiplying it by 0.2 (which is equivalent to reducing it by 80%):
   ```python
   staircase_radius = 5.0 * 0.2  # Shrink staircase radius by 80%
   ```

2. To maintain proportions, I've also adjusted the `column_radius` by the same factor:
   ```python
   column_radius = 0.5 * 0.2  # Shrink column radius proportionally
   ```

These changes will result in a Bramante staircase that has a radius 80% smaller than the original, while maintaining the same height and number of steps. The central column has also been proportionally reduced to maintain the overall look of the structure.